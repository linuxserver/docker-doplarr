---

# project information
project_name: doplarr
project_url: "https://github.com/kiranshila/Doplarr"
project_logo: "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/doplarr-logo_title.png"
project_blurb: |
  [{{ project_name|capitalize }}]({{ project_url }}) is an *arr request bot for Discord."
project_lsio_github_repo_url: "https://github.com/linuxserver/docker-{{ project_name }}"
project_categories: "Media Requesters"
# supported architectures
available_architectures:
  - {arch: "{{ arch_x86_64 }}", tag: "amd64-latest"}
  - {arch: "{{ arch_arm64 }}", tag: "arm64v8-latest"}
# container parameters
common_param_env_vars_enabled: true
param_container_name: "{{ project_name }}"
param_usage_include_env: true
param_env_vars:
  - {env_var: "DISCORD__TOKEN", env_value: "", desc: "Specify your discord bot token."}
  - {env_var: "OVERSEERR__API", env_value: "", desc: "Specify your Overseerr API key. Leave blank if using Radarr/Sonarr."}
  - {env_var: "OVERSEERR__URL", env_value: "http://localhost:5055", desc: "Specify your Overseerr URL. Leave blank if using Radarr/Sonarr."}
  - {env_var: "RADARR__API", env_value: "", desc: "Specify your Radarr API key. Leave blank if using Overseerr."}
  - {env_var: "RADARR__URL", env_value: "http://localhost:7878", desc: "Specify your Radarr URL. Leave blank if using Overseerr."}
  - {env_var: "SONARR__API", env_value: "", desc: "Specify your Sonarr API key. Leave blank if using Overseerr."}
  - {env_var: "SONARR__URL", env_value: "http://localhost:8989", desc: "Specify your Sonarr URL. Leave blank if using Overseerr."}
param_usage_include_vols: true
param_volumes:
  - {vol_path: "/config", vol_host_path: "/path/to/{{ project_name }}/config", desc: "Persistent config files"}
# optional container parameters
opt_param_usage_include_env: true
opt_param_env_vars:
  - {env_var: "DISCORD__MAX_RESULTS", env_value: "25", desc: "Sets the maximum size of the search results selection"}
  - {env_var: "DISCORD__REQUESTED_MSG_STYLE", env_value: ":plain", desc: "Sets the style of the request alert message. One of `:plain` `:embed` `:none`"}
  - {env_var: "SONARR__QUALITY_PROFILE", env_value: "", desc: "The name of the quality profile to use by default for Sonarr"}
  - {env_var: "RADARR__QUALITY_PROFILE", env_value: "", desc: "The name of the quality profile to use by default for Radarr"}
  - {env_var: "SONARR__ROOTFOLDER", env_value: "", desc: "The root folder to use by default for Sonarr"}
  - {env_var: "RADARR__ROOTFOLDER", env_value: "", desc: "The root folder to use by default for Radarr"}
  - {env_var: "SONARR__LANGUAGE_PROFILE", env_value: "", desc: "The name of the language profile to use by default for Sonarr"}
  - {env_var: "OVERSEERR__DEFAULT_ID", env_value: "", desc: "The Overseerr user id to use by default if there is no associated discord account for the requester"}
  - {env_var: "PARTIAL_SEASONS", env_value: "true", desc: "Sets whether users can request partial seasons."}
  - {env_var: "LOG_LEVEL", env_value: ":info", desc: "The log level for the logging backend. This can be changed for debugging purposes. One of trace `:debug` `:info` `:warn` `:error` `:fatal` `:report`"}
  - {env_var: "JAVA_OPTS", env_value: "", desc: "For passing additional java options."}
readonly_supported: true
# application setup block
app_setup_block_enabled: true
app_setup_block: |
  Start by following the [Discord](https://github.com/kiranshila/Doplarr#discord) setup instructions from Doplarr's readme.

  NOTE: The `DISCORD__TOKEN` environment variable is required to run the container!

  - If you are using Overseerr, fill in the Overseerr API and URL variables, and leave the Radarr/Sonarr variables blank.
  - If you are using Radarr/Sonarr (and not using Overseerr), fill in the Radarr/Sonarr API and URL variables, and leave the Overseerr variables blank.

  Extra java options can be passed with the JAVA_OPTS environment variable, eg `-e JAVA_OPTS="-Xmx256m -Xms256m"`.

  Review and adjust any [Optional Settings](https://github.com/kiranshila/Doplarr#optional-settings) from Doplarr's readme.
# init diagram
init_diagram: |
  "doplarr:latest": {
    docker-mods
    base {
      fix-attr +\nlegacy cont-init
    }
    docker-mods -> base
    legacy-services
    custom services
    init-services -> legacy-services
    init-services -> custom services
    custom services -> legacy-services
    legacy-services -> ci-service-check
    init-migrations -> init-adduser
    init-os-end -> init-config
    init-config -> init-config-end
    init-doplarr-config -> init-config-end
    init-os-end -> init-crontab-config
    init-mods-end -> init-custom-files
    init-config -> init-doplarr-config
    base -> init-envfile
    base -> init-migrations
    base -> init-mods
    init-config-end -> init-mods
    init-mods -> init-mods-end
    init-mods-package-install -> init-mods-end
    init-mods -> init-mods-package-install
    base -> init-os-end
    init-adduser -> init-os-end
    init-envfile -> init-os-end
    init-migrations -> init-os-end
    init-custom-files -> init-services
    init-mods-end -> init-services
    init-services -> svc-cron
    svc-cron -> legacy-services
    init-services -> svc-doplarr
    svc-doplarr -> legacy-services
  }
  Base Images: {
    "baseimage-alpine:3.20"
  }
  "doplarr:latest" <- Base Images
# changelog
changelogs:
  - {date: "24.06.24:", desc: "Rebase to Alpine 3.20."}
  - {date: "23.12.23:", desc: "Rebase to Alpine 3.19."}
  - {date: "25.05.23:", desc: "Rebase to Alpine 3.18."}
  - {date: "18.12.22:", desc: "Rebase to alpine 3.17, upgrade to openjdk17."}
  - {date: "01.05.22:", desc: "Remove `DISCORD__ROLE_ID` environment variable, see [Permissions Configuration](https://github.com/kiranshila/Doplarr/blob/main/docs/configuration.md#permissions)."}
  - {date: "30.01.22:", desc: "Variable adjustments."}
  - {date: "30.01.22:", desc: "Initial Release."}
